generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id            String    @id
  shop          String
  state         String
  isOnline      Boolean   @default(false)
  scope         String?
  expires       DateTime?
  accessToken   String
  userId        BigInt?
  firstName     String?
  lastName      String?
  email         String?
  accountOwner  Boolean   @default(false)
  locale        String?
  collaborator  Boolean?  @default(false)
  emailVerified Boolean?  @default(false)
}

model SelectedProduct {
  id         String     @id @default(cuid())
  shopDomain String
  productId  String
  selected   Boolean    @default(true)
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  metalType  MetalType? @default(gold)

  @@unique([shopDomain, productId])
  @@index([shopDomain, metalType])
}

model ShopSetting {
  id                  String    @id @default(cuid())
  shopDomain          String    @unique
  minPricePct         Int       @default(93)
  autoUpdateEnabled   Boolean   @default(false)
  notificationEmail   String?
  consecutiveFailures Int       @default(0)
  lastFailureAt       DateTime?
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
}

model SelectedCollection {
  id           String    @id @default(cuid())
  shopDomain   String
  collectionId String
  selected     Boolean   @default(true)
  metalType    MetalType @default(gold)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt

  @@unique([shopDomain, collectionId])
  @@index([shopDomain])
  @@index([shopDomain, metalType])
}

model PriceUpdateLog {
  id            String        @id @default(cuid())
  shopDomain    String
  executionType ExecutionType
  priceRatio    Float?
  minPricePct   Int
  totalProducts Int           @default(0)
  updatedCount  Int           @default(0)
  failedCount   Int           @default(0)
  success       Boolean
  errorMessage  String?
  executedAt    DateTime      @default(now())
  details       String?
  metalType     MetalType?    @default(gold)

  @@index([shopDomain, metalType, executedAt])
}

model ManualPriceLock {
  id         String   @id @default(cuid())
  shopDomain String
  variantId  String
  until      DateTime
  createdAt  DateTime @default(now())

  @@unique([shopDomain, variantId])
  @@index([shopDomain, until])
}

enum ExecutionType {
  cron
  manual
  webhook
}

enum MetalType {
  gold
  platinum
}
